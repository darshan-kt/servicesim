<?xml version="1.0" ?>
<%
  # ServiceSim world generator
  #
  # Command line options:
  # -s seed for random

  ###############################################
  #                                             #
  #           COMMAND LINE ARGUMENTS            #
  #                                             #
  ###############################################

  # Read task number from command line
  vars = ARGV.take_while {|arg| arg[/^\w+=/]}
  ARGV.slice!(0, vars.size)
  vars.each do |var|
    k, v = var.split('=', 2)
    TOPLEVEL_BINDING.eval %Q(#{k} = "#{v}")
  end

  seed = rand(0..10000000)
  if (defined? s)
    seed = s.to_i
  end
  srand(seed)

  ###############################################
  #                                             #
  #           IMPORT OTHER ERB FILES            #
  #                                             #
  ###############################################

  # Helper function to import another erb file
  def fromFile filename
    return ERB.new(File.read(filename), nil, nil, '_sub01').result(binding)
  end

  ###############################################
  #                                             #
  #                   ACTORS                    #
  #                                             #
  ###############################################

  # Skin files under model://actor/meshes
  skins =
  [
    "SKIN_man_blue_shirt.dae",
    "SKIN_man_green_shirt.dae",
    "SKIN_man_red_shirt.dae"
  ]

  # Idling animation files under model://actor/meshes
  animations_idle =
  [
    "ANIMATION_talking_a.dae",
    "ANIMATION_talking_b.dae"
  ]

  # Trajectory animation files under model://actor/meshes
  animations_trajectory =
  [
    "ANIMATION_walking.dae",
    "ANIMATION_running.dae"
  ]

  # List of idle actors to be inserted
  actors_idle =
  [
    # Example randomizing skin and animation
    {:skin => skins.sample, :anim => animations_idle.sample, :config_file => 'idle_near_entrance.erb'},
    # Example using skin and animation from config
    {:config_file => 'idle_near_fridge.erb'}
  ]

  # List of trajectory actors to be inserted
  actors_trajectory =
  [
    # Example randomizing skin
    {:skin => skins.sample, :config_file => 'trajectory_front.erb'},
    # Example setting velocity
    {:velocity => rand(0.9..1.2), :config_file => 'trajectory_back.erb'},
  ]

  ###############################################
  #                                             #
  #               INITIALIZATION                #
  #                                             #
  ###############################################

  # Relative path from where the script is being run to the script's directory
  DIR = File.dirname(__FILE__)

  # Actor's Z position
  actor_pos_z = 1.25

  count = 0
%>

<!-- Seed: <%= seed %> -->
<sdf version="1.6">
  <world name="ServiceSim">

    <!-- GUI -->
    <gui fullscreen='0'>
      <camera name='user_camera'>
        <!--pose>-14.41 -19.9 4.14 0 0.5 0.76</pose-->
        <pose>25.9 -21.8 73.6 0 1.05 1.57</pose>
      </camera>
    </gui>

    <!-- Scene -->
    <scene>
      <ambient>0.8 0.8 0.8 1.0</ambient>
      <background>0.66 0.77 0.84 1.0</background>
      <grid>1</grid>
      <origin_visual>1</origin_visual>
    </scene>

    <!-- A global light source -->
<!--
    <light type="directional" name="sun">
      <cast_shadows>true</cast_shadows>
      <pose>0 0 1000 0 0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>
-->

    <!-- Ground collision -->
    <model name="ground_collision">
      <static>true</static>
      <pose>100 100 0 0 0 0</pose>
      <link name="link">
        <collision name="collision">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>200 200</size>
            </plane>
          </geometry>
        </collision>
      </link>
    </model>

    <!-- Office -->
    <%
      gap = 0.1
      $panel = 1.5

      $room_name = 'reception' + '_' + count.to_s()
      $room_type = 'reception'
      $room_floor = 'carpet'
      $room_size = [-3, 3, -4, 0]
      $room_pose =
      [
        3 * $panel,
        0.0,
        0.0,
        0.0,
        0.0,
        Math::PI
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'meeting_room_large' + '_' + count.to_s()
      $room_type = 'meeting_room_large'
      $room_floor = 'carpet'
      $room_size = [-1, 4, -3, 0]
      $room_pose =
      [
        4 * $panel,
        9 * $panel + gap,
        0.0,
        0.0,
        0.0,
        -Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_large' + '_' + count.to_s()
      $room_type = 'office_large'
      $room_floor = 'carpet'
      $room_size = [-1, 2, -2, 0]
      $room_pose =
      [
        4 * $panel,
        13 * $panel + 2 * gap,
        0.0,
        0.0,
        0.0,
        -Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'refreshment_area' + '_' + count.to_s()
      $room_type = 'refreshment_area'
      $room_floor = 'tile'
      $room_size = [-3, 3, -4, 0]
      $room_pose =
      [
        11 * $panel + gap,
        5 * $panel,
        0.0,
        0.0,
        0.0,
        0.0
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'meeting_room_small' + '_' + count.to_s()
      $room_type = 'meeting_room_small'
      $room_floor = 'carpet'
      $room_size = [-1, 2, -2, 0]
      $room_pose =
      [
        17 * $panel,
        2 * $panel,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'meeting_room_small' + '_' + count.to_s()
      $room_type = 'meeting_room_small'
      $room_floor = 'carpet'
      $room_size = [-1, 2, -2, 0]
      $room_pose =
      [
        17 * $panel,
        7 * $panel,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_small' + '_' + count.to_s()
      $room_type = 'office_small'
      $room_floor = 'carpet'
      $room_size = [-1, 1, -1, 0]
      $room_pose =
      [
        22 * $panel,
        2 * $panel,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_small' + '_' + count.to_s()
      $room_type = 'office_small'
      $room_floor = 'carpet'
      $room_size = [-1, 1, -1, 0]
      $room_pose =
      [
        22 * $panel,
        5 * $panel + gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_small' + '_' + count.to_s()
      $room_type = 'office_small'
      $room_floor = 'carpet'
      $room_size = [-1, 1, -1, 0]
      $room_pose =
      [
        22 * $panel,
        8 * $panel + 2 * gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_small' + '_' + count.to_s()
      $room_type = 'office_small'
      $room_floor = 'carpet'
      $room_size = [-1, 1, -1, 0]
      $room_pose =
      [
        22 * $panel,
        11 * $panel + 3 * gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'office_small' + '_' + count.to_s()
      $room_type = 'office_small'
      $room_floor = 'carpet'
      $room_size = [-1, 1, -1, 0]
      $room_pose =
      [
        22 * $panel,
        14 * $panel + 3 * gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'bathroom' + '_' + count.to_s()
      $room_type = 'bathroom'
      $room_floor = 'tile'
      $room_size = [0, 1, -1, 0]
      $room_pose =
      [
        17 * $panel,
        10 * $panel + gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <%
      $room_name = 'bathroom' + '_' + count.to_s()
      $room_type = 'bathroom'
      $room_floor = 'tile'
      $room_size = [0, 1, -1, 0]
      $room_pose =
      [
        17 * $panel,
        12 * $panel + 2 * gap,
        0.0,
        0.0,
        0.0,
        Math::PI * 0.5
      ]
      count += 1
    %>
    <%= fromFile(DIR + "/" + "room.erb") %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 8 * $panel %>
        <%= 8 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 8 * $panel %>
        <%= 12 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 8 * $panel %>
        <%= 16 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 13 * $panel %>
        <%= 8 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 13 * $panel %>
        <%= 12 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <name>island_<%= count %></name>
      <pose>
        <%= 13 * $panel %>
        <%= 16 * $panel %>
        0
        0
        0
        <%= Math::PI * 0.25 %>
      </pose>
      <uri>model://cubicle_island</uri>
    </include>
    <% count += 1 %>

    <include>
      <pose>
        <%= 5 * $panel %>
        <%= 20 * $panel %>
        0
        0
        0
        <%= Math::PI %>
      </pose>
      <uri>model://cubicle_wall</uri>
    </include>

    <!-- Trajectory actors -->
    <%
      for actor in actors_trajectory

        # unique name
        count = count + 1
        $actor_name = 'actor_' + count.to_s;

        # skin
        $actor_skin = nil
        if actor.has_key? :skin
          $actor_skin = actor[:skin]
        end

        # animation
        $actor_anim = nil
        if actor.has_key? :anim
          $actor_anim = actor[:anim]
        end

        # velocity
        $actor_velocity = nil
        if actor.has_key? :velocity
          $actor_velocity = actor[:velocity]
        end

        # trajectory waypoints
        $actor_trajectory = nil
        if actor.has_key? :trajectory
          $actor_trajectory = actor[:trajectory]
        end

        # Set undefined values from the config file if one was given
        if actor.has_key? :config_file
          fromFile(DIR + "/" + actor[:config_file])
        end
    %>
      <%= fromFile(DIR + "/" + "actor_trajectory.erb") %>
    <% end %>

    <!-- Idling actors -->
    <%
      for actor in actors_idle

        # unique name
        count = count + 1
        $actor_name = 'actor_' + count.to_s;

        # skin
        $actor_skin = nil
        if actor.has_key? :skin
          $actor_skin = actor[:skin]
        end

        # animation
        $actor_anim = nil
        if actor.has_key? :anim
          $actor_anim = actor[:anim]
        end

        # idling pose
        $actor_pose = nil
        if actor.has_key? :pose
          $actor_pose = actor[:pose]
        end

        # Set undefined values from the config file if one was given
        if actor.has_key? :config_file
          fromFile(DIR + "/" + actor[:config_file])
        end
    %>
      <%= fromFile(DIR + "/" + "actor_idle.erb") %>
    <% end %>

  </world>
</sdf>
