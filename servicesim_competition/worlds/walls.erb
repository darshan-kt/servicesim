<%
  # Walls template
  #
  # Required variables
  # * $o (number)
  # * $g (number)

  thickness = 0.01
  width = $o
  height = 2 * $o

  t = 0.001

  pos_z = height * 0.5

  count = 0

  walls =
  [
   # entrance
   {:x => -6*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => -5*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => -4*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => -3*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => -2*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => -1*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => 0*$o, :y => 0*$o,        :yaw => 0, :type => 'Elevator'},
   {:x => 1*$o, :y => 0*$o,        :yaw => 0, :type => 'Elevator'},
   {:x => 2*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => 3*$o, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   {:x => 4*$o - t, :y => 0*$o,        :yaw => 0, :type => 'PlainWall'},
   # bathrooms
   {:x => 5*$o - $g, :y => 0*$o,        :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 5*$o - $g, :y => 1*$o,        :yaw => Math::PI*0.5,  :type => 'PlainWall'},
   {:x => 6*$o, :y => 2*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 8*$o + $g, :y => 2*$o + $g, :yaw => 0, :type => 'PlainWall'},
   # cafe
   {:x => 9*$o + $g, :y => 2*$o + $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 9*$o + $g, :y => 4*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 9*$o + $g, :y => 5*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 9*$o + $g, :y => 6*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 9*$o + $g, :y => 7*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 10*$o + $g, :y => 7*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 11*$o + $g, :y => 7*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 12*$o + $g, :y => 7*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 13*$o + $g, :y => 7*$o + $g, :yaw => 0, :type => 'PlainWall'},
   # east wall
   {:x => 14*$o + 2*$g, :y => 7*$o + $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 14*$o + 2*$g, :y => 8*$o + $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 14*$o + 2*$g, :y => 9*$o + $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 14*$o + 2*$g, :y => 10*$o + $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   # meeting r$o$om large
   {:x => 13*$o, :y => 11*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 11*$o, :y => 11*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 10*$o, :y => 11*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 9*$o, :y => 11*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 8*$o, :y => 11*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 8*$o - $g, :y => 11*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 8*$o - $g, :y => 12*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   # office small
   {:x => 7*$o - $g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 5*$o - $g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 4*$o - 2*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 2*$o - 2*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => 2*$o - 3*$g, :y => 13*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => 2*$o - 3*$g, :y => 14*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   # north wall
   {:x => 1*$o - 3*$g, :y => 15*$o, :yaw => 0, :type => 'PlainWall'},
   {:x => 0*$o, :y => 15*$o, :yaw => 0, :type => 'PlainWall'},
   {:x => -1*$o, :y => 15*$o, :yaw => 0, :type => 'PlainWall'},
   {:x => -2*$o, :y => 15*$o, :yaw => 0, :type => 'PlainWall'},
   # bathrooms
   {:x => -2*$o + $g, :y => 14*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -2*$o + $g, :y => 13*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -4*$o, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -6*$o - $g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   # office smalls
   {:x => -7*$o - 2*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -9*$o - 2*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -10*$o - 3*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -12*$o - 3*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -13*$o - 4*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -15*$o - 4*$g, :y => 13*$o - $g, :yaw => 0, :type => 'PlainWall'},
   # office large
   {:x => -15*$o - 4*$g, :y => 11*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -15*$o - 4*$g, :y => 10*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -16*$o - 5*$g, :y => 10*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -17*$o - 5*$g, :y => 10*$o - $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 10*$o - $g, :yaw => 0, :type => 'PlainWall'},
   # west wall
   {:x => -18*$o - 5*$g, :y => 9*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 8*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 7*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 6*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 5*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 4*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -18*$o - 5*$g, :y => 3*$o - $g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   # meeting room smalls
   {:x => -18*$o - 2*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -16*$o - 2*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -15*$o - 2*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -14*$o - 1*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -12*$o - 1*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -11*$o - 1*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => -10*$o - 0*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => - 8*$o - 0*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => - 7*$o - 0*$g, :y => 3*$o + $g, :yaw => 0, :type => 'PlainWall'},
   {:x => - 6*$o + 1*$g, :y => 2*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => - 6*$o + 1*$g, :y => 1*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => - 6*$o + 1*$g, :y => 0*$o, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   # center meeting room smalls
   {:x => -3*$o - 1*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x => -2*$o - 1*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x => -1*$o - 1*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  0*$o + 0*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  1*$o + 0*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  2*$o + 0*$g, :y =>   3*$o - 1*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>   3*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>   4*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>   6*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>   7*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>   8*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  3*$o + 1*$g, :y =>  10*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x => -3*$o - 1*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x => -2*$o - 1*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x => -1*$o - 1*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  0*$o + 0*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  1*$o + 0*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  2*$o + 0*$g, :y =>  11*$o + 2*$g, :yaw => 0, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>   3*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>   5*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>   6*$o + 0*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>   7*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>   9*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
   {:x =>  -3*$o - 2*$g, :y =>  10*$o + 1*$g, :yaw => Math::PI*0.5, :type => 'PlainWall'},
  ]
%>
<model name="walls">

  <static>true</static>

  <link name="link">

    <%
      for wall in walls

        x_offset = $o * 0.5
        y_offset = 0.0

        if wall[:yaw] == Math::PI * 0.5
          x_offset = 0.0
          y_offset = $o * 0.5
        end

        count += 1
        pose =
        [
          wall[:x] + x_offset,
          wall[:y] + y_offset,
          pos_z,
          0.0,
          0.0,
          wall[:yaw]
        ]
    %>

      <visual name="visual_<%= count %>">

        <pose>
          <%= pose[0] %>
          <%= pose[1] %>
          <%= pose[2] %>
          <%= pose[3] %>
          <%= pose[4] %>
          <%= pose[5] %>
        </pose>

        <geometry>
          <box>
            <size>
              <%= width %>
              <%= thickness %>
              <%= height %>
            </size>
          </box>
        </geometry>

        <material>
          <script>
            <uri>file://media/materials/scripts/</uri>
            <uri>file://media/materials/textures/</uri>
            <name>ServiceSim/<%= wall[:type] %></name>
          </script>
        </material>
      </visual>
    <% end %>

  </link>

</model>
